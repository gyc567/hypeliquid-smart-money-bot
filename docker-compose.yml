version: '3.8'

services:
  hypeliquid-bot:
    build: .
    container_name: hypeliquid-smart-money-bot
    restart: unless-stopped
    
    environment:
      # Telegram Bot Token（必需）
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      
      # Hyperliquid RPC配置
      - HYPERLIQUID_RPC_URL=${HYPERLIQUID_RPC_URL:-https://rpc.hyperliquid.xyz/evm}
      
      # 数据库配置
      - DATABASE_PATH=${DATABASE_PATH:-/app/data/smart_money_monitor.db}
      
      # 监控配置
      - DEFAULT_SCAN_INTERVAL=${DEFAULT_SCAN_INTERVAL:-60}
      - MAX_ADDRESSES_PER_USER=${MAX_ADDRESSES_PER_USER:-20}
      
      # 性能配置
      - API_RATE_LIMIT=${API_RATE_LIMIT:-2}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-10}
      
      # 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # 反垃圾配置
      - MAX_USER_MESSAGES_PER_MINUTE=${MAX_USER_MESSAGES_PER_MINUTE:-10}
    
    volumes:
      # 数据持久化
      - ./data:/app/data
      - ./logs:/app/logs
      
      # 可选：配置文件挂载
      - ./config:/app/config:ro
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    
    # 健康检查
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; from main import check_health; asyncio.run(check_health())"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hypeliquid-bot"
    
    networks:
      - hypeliquid-bot-network

  # 可选：监控服务
  monitoring:
    image: prom/prometheus:latest
    container_name: hypeliquid-bot-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - hypeliquid-bot-network
    profiles:
      - monitoring

  # 可选：日志收集
  logrotate:
    image: alpine:latest
    container_name: hypeliquid-bot-logrotate
    restart: unless-stopped
    volumes:
      - ./logs:/logs:rw
      - ./scripts/logrotate.sh:/usr/local/bin/logrotate.sh:ro
    command: |
      sh -c 'apk add --no-cache logrotate &&
             chmod +x /usr/local/bin/logrotate.sh &&
             echo "0 2 * * * /usr/local/bin/logrotate.sh" | crontab - &&
             crond -f'
    profiles:
      - logs

volumes:
  prometheus_data:
    driver: local

networks:
  hypeliquid-bot-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16